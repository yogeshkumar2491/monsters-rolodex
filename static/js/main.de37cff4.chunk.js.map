{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.componenet.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChnage","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","json","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAGaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAK,UAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACxB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHbC,EAAW,SAACR,GACrB,OACI,sBAAKC,UAAW,YAAhB,cACID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAK,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJjDM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAW,SAAUa,KAAM,SAAUF,YAAaA,EAClDG,SAAUF,MCgCNG,E,kDA9BX,aAAe,IAAD,8BACV,gBAaJC,aAAe,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAZvD,EAAKC,MAAQ,CACTnB,QAAS,GACTgB,YAAa,IAJP,E,gEAQO,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAArB,GAAO,OAAIA,EAAQsB,UACxBD,MAAK,SAAArB,GAAO,OAAI,EAAKe,SAAS,CAACf,iB,+BAK9B,IAAD,EAC0BuB,KAAKJ,MAA7BnB,EADF,EACEA,QAASgB,EADX,EACWA,YACVQ,EAAmBxB,EAAQyB,QAAO,SAACzB,GAAD,OAAaA,EAAQE,KAAKwB,cAAcC,SAASX,EAAYU,kBACrG,OACI,sBAAK7B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWW,YAAa,kBACbC,aAAcc,KAAKV,eAC9B,cAAC,EAAD,CAAUR,SAAUmB,W,GAzBlBI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.de37cff4.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nexport const Card = (props) => (\n    <div className={'card-container'}>\n        <img alt={'monster'} src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n)\n","import React from 'react';\nimport './card-list.styles.css'\nimport {Card} from \"../card/card.component\";\n\nexport const CardList = (props) => {\n    return (\n        <div className={'card-list'}> {\n            props.monsters.map(monster => (<Card key={monster.id} monster={monster}/>))\n        }</div>\n    )\n};","import React from 'react'\nimport './search-box.styles.css'\n\nexport const SearchBox = ({placeholder, handleChnage}) => (\n    <input className={'search'} type={'search'} placeholder={placeholder}\n           onChange={handleChnage}/>\n)","import React, {Component} from 'react'\nimport './App.css';\n\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport {SearchBox} from \"./components/search-box/search-box.componenet\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monster: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(monster => monster.json())\n            .then(monster => this.setState({monster}))\n    }\n\n    handleChange = (e) => this.setState({searchField: e.target.value})\n\n    render() {\n        const {monster, searchField} = this.state\n        const filteredMonsters = monster.filter((monster) => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox placeholder={'search monsters'}\n                           handleChnage={this.handleChange}/>\n                <CardList monsters={filteredMonsters}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}